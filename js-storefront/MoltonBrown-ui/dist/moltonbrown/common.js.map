{"version":3,"sources":["webpack:///./src/app/directives/customFocus.module.ts","webpack:///./src/app/directives/customfocus.directive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACH;AACqB;AACtB;AAW3C;IAAA;IAAiD,CAAC;IAArC,iCAAiC;QAV7C,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,wDAAc;aACf;YACD,YAAY,EAAE,CAAC,+EAAwB,CAAC;YACxC,OAAO,EAAO,CAAE,+EAAwB;gBACtC,4DAAY,EAAE,0DAAW,CAAE;SAC9B,CAAC;OACW,iCAAiC,CAAI;IAAD,wCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACf6B;AACnC;AAExC;IAII,kCAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAElC,CAAC;IAKM,2CAAQ,GAAf,UAAgB,KAAK;QACnB,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACvC,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,IAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAC5D,gBAAgB,CAAC,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;SACjD;IACH,CAAC;IAhBc;QAAd,2DAAK,CAAC,MAAM,CAAC;kCAAO,qDAAM;0DAAC;IAMnB;QAAR,2DAAK,EAAE;kCAAY,qDAAM;+DAAC;IAG3B;QADC,kEAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;4DAQlC;IAlBQ,wBAAwB;QADpC,+DAAS,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,CAAC;yCAKd,wDAAU;OAJzB,wBAAwB,CAoBpC;IAAD,+BAAC;CAAA;AApBoC","file":"common.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule} from \"@angular/forms\";\r\nimport {CustomFormFocusDirective} from './customfocus.directive';\r\nimport { NgxStarsModule } from \"ngx-stars\";\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxStarsModule\r\n  ],\r\n  declarations: [CustomFormFocusDirective],\r\n  exports:      [ CustomFormFocusDirective,\r\n    CommonModule, FormsModule ]\r\n})\r\nexport class CustomFocusControlDirectiveModule { }","import { Directive, Input, HostListener, ElementRef } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n@Directive({ selector: '[custom-focus]' })\r\nexport class CustomFormFocusDirective {\r\n\r\n    @Input('form') form: NgForm;\r\n\r\n    constructor(private el: ElementRef) {\r\n\r\n    }\r\n\r\n    @Input() formGroup: NgForm;\r\n\r\n    @HostListener('submit', ['$event'])\r\n    public onSubmit(event): void {\r\n      if ('INVALID' === this.formGroup.status) {\r\n        event.preventDefault();\r\n  \r\n        const formGroupInvalid = this.el.nativeElement.querySelectorAll('.ng-invalid');\r\n        (<HTMLInputElement>formGroupInvalid[0]).focus();\r\n      }\r\n    }\r\n\r\n}"],"sourceRoot":""}